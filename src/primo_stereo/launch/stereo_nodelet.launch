<?xml version="1.0" encoding="UTF-8"?>
<launch>

    <!-- 
        I wrote this when I was trying to make use of the rtab processing nodelets.
        I wanted the rtab nodelets to run in the same nodelet manager so I manually
        set up stereo_image_proc to get access of its nodelet manager. I probably
        didn't have to do this. 
    -->

    <!-- 
         We have this whole node_space issue because we need a globally
         qualified nodelet_manager name for this to work. This will created a nodelet
         manager called $(arg node_space)/nodelet_manager
    -->
    <arg name="node_space"          default="" />
    <arg name="respawn"             default="false"/>
    <arg name="rate"                default="10"/>
    <arg name="throttle"            default="true"/>
    <arg name="mask"                default="false"/>

    <!-- Create a nodelet manager  -->
    <node pkg="nodelet" type="nodelet" name="nodelet_manager"  args="manager"
        output="screen"/>

    <arg     if="$(arg respawn)" name="bond" value="" />
    <arg unless="$(arg respawn)" name="bond" value="--no-bond" />



    <!-- Throttle the data coming from ucv_cam-->
    <node if="$(arg throttle)" pkg="nodelet" type="nodelet" name="stereo_throttle" 
        args="load rtabmap_ros/stereo_throttle $(arg node_space)/nodelet_manager">

        <remap from="left/image"        to="left/image_raw"/>
        <remap from="right/image"       to="right/image_raw"/>
        <remap from="left/camera_info"  to="left/camera_info"/>
        <remap from="right/camera_info" to="right/camera_info"/>

        <param name="queue_size"    type="int"      value="10"/>
        <param name="rate"          type="double"   value="$(arg rate)"/>

    </node>

    <!-- Launch the mask which needs to know which camera we're running so we
         can load the right mask. --> 
    <node if="$(arg mask)" pkg="nodelet" type="nodelet" name="stereo_mask_nodelet" 
        args="load stereo_mask/stereo_mask_nodelet $(arg node_space)/nodelet_manager"
        output="screen">
        <remap if="$(arg throttle)"     from="left/image_raw"   to="left/image_raw_throttle"/>
        <remap if="$(arg throttle)"     from="right/image_raw"  to="right/image_raw_throttle"/>
        <param name="camera"            type="string"           value="$(arg node_space)"/>
    </node>
    
    <!-- Stereo Image Proc pipeline -->
    <group>
        <!-- Basic processing for left camera -->
        <!-- Debayered images -->
        <group ns="left">
            <node pkg="nodelet" type="nodelet" name="debayer"
                args="load image_proc/debayer $(arg node_space)/nodelet_manager $(arg bond)"
                respawn="$(arg respawn)" >
                <remap if="$(arg throttle)"     from="image_raw"    to="image_raw_throttle"/>
                <remap if="$(arg mask)"         from="image_raw"    to="image_raw_mask"/>
            </node>

            <!-- Monochrome rectified image -->
            <node pkg="nodelet" type="nodelet" name="rectify_mono"
                args="load image_proc/rectify $(arg node_space)/nodelet_manager $(arg bond)"
                respawn="$(arg respawn)" >
                <remap if="$(arg throttle)"     from="camera_info"  to="camera_info_throttle"/>
            </node>

            <!-- Color rectified image -->
            <node pkg="nodelet" type="nodelet" name="rectify_color"
                args="load image_proc/rectify $(arg node_space)/nodelet_manager $(arg bond)"
                respawn="$(arg respawn)">
                <remap if="$(arg throttle)"     from="camera_info"  to="camera_info_throttle"/>
                <remap from="image_mono" to="image_color" />
                <remap from="image_rect" to="image_rect_color" />
            </node>

        </group>

        <!-- Basic processing for right camera -->
        <!-- Debayered images -->
        <group ns="right">
            <node pkg="nodelet" type="nodelet" name="debayer"
                args="load image_proc/debayer $(arg node_space)/nodelet_manager $(arg bond)"
                respawn="$(arg respawn)" >
                <remap if="$(arg throttle)"     from="image_raw"    to="image_raw_throttle"/>
                <remap if="$(arg mask)"         from="image_raw"    to="image_raw_mask"/>
            </node>
                            

            <!-- Monochrome rectified image -->
            <node pkg="nodelet" type="nodelet" name="rectify_mono"
                args="load image_proc/rectify $(arg node_space)/nodelet_manager $(arg bond)"
                respawn="$(arg respawn)" >
                <remap if="$(arg throttle)"     from="camera_info"  to="camera_info_throttle"/>
            </node>

            <!-- Color rectified image -->
            <node pkg="nodelet" type="nodelet" name="rectify_color"
                args="load image_proc/rectify $(arg node_space)/nodelet_manager $(arg bond)"
                respawn="$(arg respawn)">
                <remap if="$(arg throttle)"     from="camera_info"  to="camera_info_throttle"/>
                <remap from="image_mono" to="image_color" />
                <remap from="image_rect" to="image_rect_color" />
            </node>
        </group>


        <!-- Disparity image -->
        <node pkg="nodelet" type="nodelet" name="disparity"
            args="load stereo_image_proc/disparity $(arg node_space)/nodelet_manager $(arg bond)"
            respawn="$(arg respawn)" >
            <param name="disparity_range" value="128"/>
        </node>

        <!-- PointCloud2 -->
        <node pkg="nodelet" type="nodelet" name="point_cloud2"
            args="load stereo_image_proc/point_cloud2 $(arg node_space)/nodelet_manager $(arg bond)"
            respawn="$(arg respawn)" >
        </node>

    </group>
</launch>
